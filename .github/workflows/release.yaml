name: Build, Push Docker Image, and Create Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

env:
  DOCKERFILE_PATH: docker/release.dockerfile
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.title=Mittagskarte
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=Schniddzl.de - deine Mittagskarte
            org.opencontainers.image.vendor=flohoss
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker
        uses: docker/build-push-action@v6
        with:
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ steps.meta.outputs.labels['org.opencontainers.image.version'] }}
            BUILD_TIME=${{ steps.meta.outputs.labels['org.opencontainers.image.created'] }}
            REPO=https://github.com/${{ github.repository }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Capture Docker digest
        run: echo "IMAGE_DIGEST=${{ steps.docker.outputs.digest }}" >> $GITHUB_ENV

      - name: Gather commits since last tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            GIT_LOG=$(git log --pretty=format:'  - %s (%h)%n    %b')
          else
            GIT_LOG=$(git log $LAST_TAG..HEAD --pretty=format:'  - %s (%h)%n    %b')
          fi

          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$GIT_LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Docker image for this release:

            ```
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}@${{ env.IMAGE_DIGEST }}
            ```

            Commits included in this release:
            ${{ env.COMMITS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
