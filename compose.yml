services:
  mittag:
    profiles: [build]
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - GOLANG_VERSION=${GOLANG_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
        - NODE_VERSION=${NODE_VERSION}
        - ALPINE_VERSION=${ALPINE_VERSION}

  backend:
    profiles: [dev]
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
      args:
        - GOLANG_VERSION=${GOLANG_VERSION}
    command: air -c .air.toml
    environment:
      - TZ=Europe/Berlin
      - LOG_LEVEL=debug
      - APP_VERSION=v0.0.1-dev
      - BUILD_TIME=2023-04-05T20:48:07Z
      - GOOGLE_API_KEY=AIzaSyCPVvOqLQTWu3_2Chr_9eqfZefxolRrUc8
    ports:
      - 4000:4000
    volumes:
      - .:/app/

  backend-debug:
    profiles: [debug]
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
      args:
        - GOLANG_VERSION=${GOLANG_VERSION}
    command: scripts/debug.sh
    environment:
      - TZ=Europe/Berlin
      - LOG_LEVEL=debug
      - APP_VERSION=v0.0.1-dev
      - BUILD_TIME=2023-04-05T20:48:07Z
      - GOOGLE_API_KEY=AIzaSyCPVvOqLQTWu3_2Chr_9eqfZefxolRrUc8
    ports:
      - 4001:4001
      - 4000:4000
    volumes:
      - ./:/app/

  frontend:
    profiles: [dev, debug]
    image: node:${NODE_VERSION}-alpine
    working_dir: /app/web
    command: yarn run tailwind:dev
    tty: true
    volumes:
      - .:/app/

  go:
    profiles: [install]
    image: golang:${GOLANG_VERSION}
    working_dir: /app
    entrypoint: go
    volumes:
      - .:/app/

  yarn:
    profiles: [install]
    image: node:${NODE_VERSION}-alpine
    working_dir: /app/web
    entrypoint: yarn
    volumes:
      - .:/app/
