networks:
  net:
    external: false

volumes:
  redis: null

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
      args:
        - V_GOLANG=${V_GOLANG}
    command: air -c .air.toml
    environment:
      - TZ=Europe/Berlin
      - LOG_LEVEL=debug
      - API_TOKEN=123456
    volumes:
      - .:/app/
    ports:
      - 4000:4000
    networks:
      - net

  redis:
    container_name: redis
    image: redis:${V_REDIS}-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis:/data
    ports:
      - 6379:6379
    networks:
      - net

  ocrserver:
    container_name: ocrserver
    image: otiai10/ocrserver
    ports:
      - 8080:8080
    networks:
      - net

  docd:
    container_name: docd
    image: sajari/docd:1
    command: -addr 0.0.0.0:8888
    ports:
      - 8888:8888
    networks:
      - net

  frontend:
    container_name: frontend
    image: node:${V_NODE}
    working_dir: /app/web
    command: ../scripts/yarn.sh
    volumes:
      - .:/app/
    ports:
      - 9000:9000
    networks:
      - net

  mittag:
    profiles: [build]
    image: ${CURRENT_IMAGE}
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - V_GOLANG=${V_GOLANG}
        - V_DEBIAN=${V_DEBIAN}
        - V_NODE=${V_NODE}
        - V_ALPINE=${V_ALPINE}
        - APP_VERSION=${CI_COMMIT_TAG}

  go:
    profiles: [install]
    image: golang:${V_GOLANG}
    working_dir: /app
    entrypoint: go
    volumes:
      - .:/app/

  yarn:
    profiles: [install]
    image: node:${V_NODE}
    entrypoint: yarn
    working_dir: /app/web
    volumes:
      - .:/app/
