basePath: /api/v1
definitions:
  config.DayOfWeek:
    enum:
    - Sunday
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
    type: string
    x-enum-varnames:
    - Sunday
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
  config.FoodEntry:
    properties:
      day:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  config.Group:
    enum:
    - Degerloch
    - Fasanenhof
    - Feuerbach
    - Köngen
    - Leinfelden-Echterdingen
    - Nürtingen
    type: string
    x-enum-varnames:
    - Degerloch
    - Fasanenhof
    - Feuerbach
    - Koengen
    - LeinfeldenEchterdingen
    - Nuertingen
  config.Menu:
    properties:
      card:
        type: string
      description:
        type: string
      food:
        items:
          $ref: '#/definitions/config.FoodEntry'
        type: array
    type: object
  echo.HTTPError:
    properties:
      message: {}
    required:
    - message
    type: object
  router.Restaurant:
    properties:
      address:
        type: string
      group:
        $ref: '#/definitions/config.Group'
      icon:
        type: string
      id:
        type: string
      menu:
        $ref: '#/definitions/config.Menu'
      name:
        type: string
      page_url:
        type: string
      phone:
        type: string
      rest_days:
        items:
          $ref: '#/definitions/config.DayOfWeek'
        type: array
    required:
    - address
    - group
    - icon
    - id
    - menu
    - name
    - page_url
    - phone
    - rest_days
    type: object
host: mittag.unjx.de
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Mittagstisch API
  version: "1.0"
paths:
  /restaurants:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/router.Restaurant'
  /restaurants/{id}:
    get:
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/router.Restaurant'
        "404":
          description: Can not find ID
          schema:
            $ref: '#/definitions/echo.HTTPError'
schemes:
- https
swagger: "2.0"
