variables:
  LATEST_IMAGE: "$CI_REGISTRY_IMAGE:latest"
  DOCKER_VERSION: "24.0.2"
  FEDORA_VERSION: "38"
  NODE_VERSION: "18"
  ALPINE_VERSION: "3"
  DEBIAN_VERSION: "12"
  TELEPORT_VERSION: "13.1.1"

image: docker:$DOCKER_VERSION-git

.login_registry:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.if-release-candidate-tag: &if-release-candidate-tag
  if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$/'

.if-stable-release-tag: &if-stable-release-tag
  if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

.release:
  rules:
    - <<: *if-release-candidate-tag
    - <<: *if-stable-release-tag

stages:
  - test
  - build
  - analyse
  - deploy

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml

build_release:
  rules: !reference [.release, rules]
  stage: build
  extends: .login_registry
  services:
    - name: docker:$DOCKER_VERSION-dind
      alias: docker
  variables:
    DOCKER_BUILDKIT: "1"
    DOCKER_TLS_CERTDIR: "/certs"
    CURRENT_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    VERSION_TAG: $CI_COMMIT_TAG
    GO_BUILDER_IMAGE: "$CI_REGISTRY_IMAGE:go-builder"
    NODE_BUILDER_IMAGE: "$CI_REGISTRY_IMAGE:node-builder"
    LOGO_BUILDER_IMAGE: "$CI_REGISTRY_IMAGE:logo"
  script:
    - apk add bash
    - .gitlab/build_image.sh
    - docker push $CURRENT_IMAGE
    - docker push $LATEST_IMAGE

container_scanning:
  rules: !reference [.release, rules]
  stage: analyse
  variables:
    CS_IMAGE: $LATEST_IMAGE
    CS_DOCKERFILE_PATH: docker/Dockerfile

deploy_release:
  rules: !reference [.rules:release, rules]
  stage: deploy
  image: debian:${DEBIAN_VERSION}-slim
  id_tokens:
    TBOT_GITLAB_JWT:
      aud: tp.fhoss.de
  script:
    - apt-get update && apt-get install curl -y
    - cd /tmp
    - "curl -O https://cdn.teleport.dev/teleport-v${TELEPORT_VERSION}-linux-amd64-bin.tar.gz"
    - tar -xvf teleport-v${TELEPORT_VERSION}-linux-amd64-bin.tar.gz
    - ./teleport/install
    - "tbot start --token=gitlab --destination-dir=/tmp/tbot-user --data-dir=/tmp/tbot-data --auth-server=tp.fhoss.de:443 --join-method=gitlab --oneshot"
    - 'tsh -i /tmp/tbot-user/identity --proxy tp.fhoss.de:443 ssh bot@ducati "docker compose -f /opt/docker/mittag/docker-compose.yml up -d --pull always"'
