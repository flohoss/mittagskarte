package components

import "gitlab.unjx.de/flohoss/mittag/config"

func getGridCols(r *config.Restaurant) string {
	if r.Menu.URL == "" {
		return "grid-cols-4"
	}
	return "grid-cols-5"
}

func getModalID(r *config.Restaurant, suffix string) string {
	if r == nil {
		return ""
	}
	return "modal_" + r.ID + "_" + suffix
}

func getModalAction(r *config.Restaurant, suffix string) templ.ComponentScript {
	if r == nil {
		return templ.ComponentScript{}
	}
	return templ.ComponentScript{
		Name:       "open_modal_" + r.ID + "_" + suffix,
		Call:       getModalID(r, suffix) + ".showModal()",
		CallInline: getModalID(r, suffix) + ".showModal()",
	}
}

func tooltip(toolTipBottom bool) string {
	if toolTipBottom {
		return "tooltip-bottom"
	}
	return "tooltip-top"
}

func imgClass(m *config.Menu) string {
	if m.Landscape {
		return "lg:max-w-2xl xl:max-w-4xl"
	}
	return "lg:max-w-xl max-w-2xl"
}

templ Controls(r *config.Restaurant, toolTipBottom bool) {
	<div class={ "grid gap-2 w-full", getGridCols(r) }>
		if r.Menu.URL != "" {
			<div class="relative inline-block">
				<a
					href={ templ.URL(r.Menu.URL) }
					class="my-btn btn-primary"
					target="_blank"
					data-lg-blank
					rel="noopener noreferrer"
					onmouseenter={ templ.JSFuncCall("showTooltip", templ.JSExpression("event"), "tooltip_menu_"+r.ID) }
					onmouseleave={ templ.JSFuncCall("hideTooltip", "tooltip_menu_"+r.ID) }
				>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
						<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"></path>
					</svg>
				</a>
				<div
					id={ "tooltip_menu_" + r.ID }
					class="hidden absolute z-50 p-2 rounded-lg bg-base-100 max-h-screen overflow-y-auto"
					style="will-change: transform; -webkit-transform: translateZ(0);"
				>
					<img height={ r.Menu.Height } width={ r.Menu.Width } src={ templ.URL(r.Menu.URL) } alt={ r.Name } class={ "object-contain w-auto", imgClass(&r.Menu) }/>
				</div>
			</div>
		}
		if r.Parse.UpdateCron != "" {
			<div class={ "tooltip", tooltip(toolTipBottom) } data-tip="Aktualisieren">
				<button
					class="my-btn btn-neutral"
					if r.Loading {
						disabled
					}
					hx-put={ "/update/" + r.ID }
					hx-trigger="click"
					hx-target="#restaurants-container"
					hx-swap="innerHTML"
					hx-on::before-request={ templ.JSFuncCall("startUpdate", templ.JSExpression("event")) }
					hx-on::after-request={ templ.JSFuncCall("stopUpdate", templ.JSExpression("event")) }
				>
					<span class={ "loading loading-spinner btn-icon", templ.KV("hidden",!r.Loading) }></span>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class={ "btn-icon", templ.KV("hidden",r.Loading) }>
						<path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99"></path>
					</svg>
				</button>
			</div>
		} else {
			<div class={ "tooltip", tooltip(toolTipBottom) } data-tip="Hochladen">
				<div onclick={ getModalAction(r, "upload") } class="my-btn btn-neutral">
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
						<path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5"></path>
					</svg>
				</div>
			</div>
		}
		<div class={ "tooltip", tooltip(toolTipBottom) } data-tip="Navigieren">
			<a href={ templ.URL("https://www.google.com/maps/search/?api=1&query=" + r.Address) } target="_blank" class="my-btn btn-neutral">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
					<path stroke-linecap="round" stroke-linejoin="round" d="M9 6.75V15m6-6v8.25m.503 3.498 4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 0 0-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0Z"></path>
				</svg>
			</a>
		</div>
		<div class={ "tooltip", tooltip(toolTipBottom) } data-tip="Anrufen">
			<a href={ templ.URL("tel:" + r.Phone) } class="my-btn btn-neutral">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
					<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z"></path>
				</svg>
			</a>
		</div>
		<div class={ "tooltip", tooltip(toolTipBottom) } data-tip="Webseite">
			<a href={ templ.URL(r.PageUrl) } target="_blank" class="my-btn btn-neutral">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
					<path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244"></path>
				</svg>
			</a>
		</div>
	</div>
	if r.Parse.UpdateCron == "" {
		<dialog id={ getModalID(r, "upload") } class="modal">
			<div class="modal-box ">
				<form action={ templ.URL("/upload/" + r.ID) } method="post" enctype="multipart/form-data">
					<div class="grid gap-5">
						<legend class="fieldset-legend">Menü für { r.Name } hochladen</legend>
						<input required type="password" placeholder="API Token" name="token" class="input validator w-full"/>
						<input type="file" name="file" class="file-input w-full"/>
					</div>
					<div class="flex justify-end mt-5">
						<button type="submit" class="btn btn-neutral">
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="btn-icon">
								<path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5"></path>
							</svg>
							Hochladen
						</button>
					</div>
				</form>
			</div>
			<form method="dialog" class="modal-backdrop">
				<button>close</button>
			</form>
		</dialog>
	}
}
